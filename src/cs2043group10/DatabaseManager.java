
package cs2043group10;

import cs2043group10.data.FinancialDocument;
import cs2043group10.data.FinancialQuery;
import cs2043group10.data.LoginClass;
import cs2043group10.data.MedicalDocument;
import cs2043group10.data.MedicalQuery;
import cs2043group10.data.PatientInformation;
import cs2043group10.data.PatientQuery;
import cs2043group10.data.IQuery;

public class DatabaseManager {
	private int loggedInId;
	private String loggedInName;
	private LoginClass loginClass;
	private IReversableManager manager;
	
	public DatabaseManager(IReversableManager manager) {
		this.manager = manager;
		loggedInId = -1;
		loginClass = LoginClass.NOT_LOGGED_IN;
		loggedInName = null;
	}
	
	public LoginClass tryLogin(int id, String password) throws DatabaseException {
		// Try to login using id and password.
		throw new RuntimeException("Not yet implemented.");
	}
	
	public LoginClass getLoginClass() {
		return loginClass;
	}
	
	public int getId() {
		return loggedInId;
	}
	
	public String getName() {
		return loggedInName;
	}
	
	public void logout() {
		loggedInId = -1;
		loggedInName = null;
		loginClass = LoginClass.NOT_LOGGED_IN;
	}
	
	public IReversable instantiateHomeView() throws DatabaseException {
		return loginClass.instantiateHomeView(manager, loggedInId);
	}
	
	public PatientInformation queryPatientInformation(int patientId) throws DatabaseException {
		// TODO
		return null;
	}
	
	public MedicalDocument queryMedicalDocument(int documentId) throws DatabaseException {
		// TODO
		return null;
	}
	
	public FinancialDocument queryFinancialDocument(int documentId) throws DatabaseException {
		// TODO
		return null;
	}
	
	public IQuery<PatientQuery.PatientEntry> queryPatientsUnderDoctor(int doctorId) throws DatabaseException {
		// TODO
		return null;
	}
	
	public IQuery<MedicalQuery.MedicalEntry> queryMedicalDocumentsUnderPatient(int patientId) throws DatabaseException {
		// TODO
		return null;
	}
	
	public IQuery<FinancialQuery.FinancialEntry> queryFinancialDocumentsUnderPatient(int patientId) throws DatabaseException {
		// TODO
		return null;
	}
	
	public int createPatient(PatientInformation information) throws DatabaseException {
		// TODO The timestamp and id fields should be automatically generated by the database.
		// return the id of the new patient.
		return -1;
	}
	
	public int createFinancialDocument(FinancialDocument document) throws DatabaseException {
		// TODO
		return -1;
	}
	
	public int createMedicalDocument(MedicalDocument document) throws DatabaseException {
		// TODO
		return -1;
	}
	
	public void updatePatient(PatientInformation information) throws DatabaseException {
		// TODO
	}
	
	public void updateMedicalDocument(MedicalDocument document) throws DatabaseException {
		// TODO
	}
	
	public void updateFinancialDocument(FinancialDocument document) throws DatabaseException {
		// TODO
	}
}